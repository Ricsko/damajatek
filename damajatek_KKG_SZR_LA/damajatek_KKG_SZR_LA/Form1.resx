<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imagelist.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imagelist.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA0
        DQAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABMgEAATIBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwAByAMAATIDAAEBAQABCAUAARABJxgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/EwAB9AG8AZIBbQEV
        AQ4CAAEOARUBbQGSAbwB9LcAAfQB7wETDgABEwHvAfQgAAEPBRAIEQEQgwAB8wHsFAAB7AHzHAACDgHv
        Df8B8AIPfwAB/wHsGAAB7AH/GgAB8hL/ARB9AAG8AQ4aAAEOAbwWAAFDAvIT/wL0ARJ6AAGSHgABkhMA
        AeoB8AHxF/8B8wHyAex2AAH/AesgAAHrAf8PAAHsAQcB8Rv/AfMB7HQAAf8BbSIAAW0B/w4AAfce/wHy
        AexzAAHrJAAB6w0AAW0B8R//AfMB7XEAAZImAAGSCwABbQHxIf8B9AHtAQ5uAAG8KAABvAkAAW0B8yT/
        AewBD2wAAf8BDigAAQ4B/wYAAQ4BbQH0Jv8B7AEQawAB7CoAAewGAAERKf8BE2oAAfMsAAHzBAABDgES
        Kf8BEmoAAewsAAHsBAABFCr/ARJpAAH0LgAB9AMAARQq/wFtAQ5oAAHvLgAB7wMAARQr/wFtaAABEy4A
        ARMDAAEUK/8BbWcAAfQwAAH0AQABEwHwK/8B8wHsZgABvDAAAbwBAAHqLf8B7GYAAZIwAAGSAQAB6i3/
        AexmAAFtMAABbQEAAeot/wHsZgABFTAAARUBAAHqLf8B7GYAAQ4wAAEOAQAB6i3/AeyZAAHqLf8B7JkA
        Aeot/wHsZgABDjAAAQ4BAAHqLf8B7GYAARUwAAEVAQAB6i3/AexmAAFtMAABbQEAAeot/wHsZgABkjAA
        AZIBAAESLf8B7GYAAbwwAAG8AQABEi3/AexmAAH0MAAB9AEAARIt/wHtZwABEy4AARMCAAESLP8B7QEP
        ZwAB7y4AAe8CAAESLP8B62gAAfQuAAH0AgABEAHtK/8B62kAAewsAAHsBAABFSr/AfcBQ2kAAfMsAAHz
        BAABEAH3KP8B9wERawAB7CoAAewGAAEPKP8BFGwAAf8BDigAAQ4B/wYAAQ4BByf/ARRtAAG8KAABvAkA
        AfIm/wEUbgABkiYAAZIKAAG8AfIB9CL/AvABQ28AAeskAAHrDQAB7yH/AfEBDnEAAf8BbSIAAW0B/w0A
        Ae8g/wHwdAAB/wHrIAAB6wH/DgABDgGSHv8BBwEOdgABkh4AAZIRAAEPAe0c/wHvAQ94AAG8AQ4aAAEO
        AbwTAAEQARMB6xn/AfcBEHoAAf8B7BgAAewB/xYAAQ4B6xf/AZIBEX0AAfMB7BQAAewB8xkAAQ4EbQEH
        Df8B8wRtARGAAAH0Ae8BEw4AARMB7wH0IAABEw3sAW2IAAH0AbwBkgFtARUBDgIAAQ4BFQFtAZIBvAH0
        qAABQgFNAT4HAAE+AwABKAMAAcgDAAEyAwABAQEAAQEFAAF4AQUWAAP/AQAC/wHAAQAE/wHgAQABPwH/
        AfAPAAH/Af4CAAEfA/8BgAEAAQ8B/wHwDwAB/wH4AgABBwL/AfwCAAEBAf8B8A8AAf8B4AIAAQEC/wH4
        AwAB/wHwDwAB/wHAAwAC/wHwAwABfwHwDwAB/wGAAwABfwH/AcADAAEfAfAPAAH+BAABHwH/AYADAAEP
        AfAPAAH8BAABDwH/BAABBwHwDwAB/AQAAQ8B/gQAAQMB8A8AAfgEAAEHAfwEAAEBAfAPAAHwBAABAwH8
        BAABAQHwDwAB4AQAAQEB+AUAAfAPAAHgBAABAQH4BQAB8A8AAcAFAAHwBQABcA8AAcAFAAHwBQABcA8A
        AYAFAAFgBQABMA8AAYAFAAFgBQABMA8AAYAFAAFgBQABMBsAARAbAAEQGwABEBsAARAbAAEQGwABEBsA
        ARAbAAEQGwABEBsAARAbAAEQGwABEBsAARAbAAEQDwABgAUAAWAFAAEwDwABgAUAAWAFAAEwDwABgAUA
        AWAFAAEwDwABwAUAAfAFAAFwDwABwAUAAfAFAAFwDwAB4AQAAQEB+AUAAfAPAAHgBAABAQH4BQAB8A8A
        AfAEAAEDAfwEAAEBAfAPAAH4BAABBwH8BAABAQHwDwAB/AQAAQ8B/gQAAQMB8A8AAfwEAAEPAf8EAAEH
        AfAPAAH+BAABHwH/AYADAAEPAfAPAAH/AYADAAF/Af8BwAMAAR8B8A8AAf8BwAMAAv8B4AMAAT8B8A8A
        Af8B4AIAAQEC/wH4AwAB/wHwDwAB/wH4AgABBwL/AfwCAAEBAf8B8A8AAf8B/gIAAR8D/wGAAQABDwH/
        AfAPAAL/AcABAAT/AeABAAE/Af8B8A8ACw==
</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>A hagyományos dámajátékban a sakkal ellentétben a sötét kezd, a játékosok itt is felváltva lépnek. Az egyszerű dámabábu mindig csak egyet léphet előre az ellenfél felé, és csakis átlósan, azonos színű mezőre (úgy tehát, ahogy a gyalog üt a sakkban). Az f3-on álló bábu tehát az e4 és g4 mezőkre léphet.

Ha azon a mezőn, ahová a bábu léphetne, az ellenfél egy bábuja áll, és azonos irányban még egy mezőt tovább haladva üres mező van, akkor ütni kell: az ellenfél bábuját átugorva a mögötte lévő üres mezőre lépünk, az ellenfél bábuját pedig levesszük. Ilyen ütéshelyzet látható a 2. ábrán. A szabályokból értelemszerűen következik, hogy nem lehet leütni egy a tábla szélén álló bábut. A dámajátékban hagyományosan ütéskényszer van, azaz ha egy játékos tud ütni, akkor kötelező ütnie. Ha több ütési lehetősége is van, szabadon dönthet, hogy melyiket választja. Ezt a szabályt azonban nem mindig alkalmazzák.

Ha az ütés után a bábu ismét ütéshelyzetbe kerül, azt az ütést is végre kell hajtani, így ütéssorozat jön létre. Az ütéssorozat addig folytatható (ill. ütéskényszer esetén folytatandó), amíg leüthető bábu van. A 3. ábrán látható táblarészleten sötét egy két ütésből álló ütéssorozatot hajthat végre az X-szel jelölt mezőkre lépve, világos mindkét bábuját leütve.

z a bábu, amelyik eléri a tábla szemközti sorát, dámává változik (az ábrákon a kis koronával megjelölt korongok jelzik a dámákat). A dámák szabadabban mozoghatnak, mint az egyszerű bábuk: minden dáma léphet és üthet hátrafelé is (ellenkező esetben nem is tudná elhagyni a szélső sort). Elterjedt, bár nem mindig alkalmazott szabály az is, hogy a dáma „nekifutásból” üthet. Erre is három variáció van:

  1. az ütést megelőzően, a leütendő bábu előtt tetszőleges számú üres mezőt átugorhat;
  2. az ütést követően, a leütendő bábu mögött tetszőleges számú üres mezőt átugorhat;
  3. az előző kettő kombinációja.

A baloldalt látható 4. ábrán az 1. esetben a sötét dáma az X-szel jelölt c6-os mezőre léphet, a 3. esetben ezen felül léphet a fekete körökkel jelölt b7-es és a8-as mezőkre is.

Egy másik szabályvariáció szerint a dáma egyetlen lépéssel több bábut is le tud ütni akkor is, ha azok között nincs üres mező. Egy ilyen helyzet látható az 5. ábrán. Ennek a szabálynak az alkalmazása független az előző, nekifutásos szabálytól. Ha például az ütés utáni „továbbfutás” és több-bábus ütés egyaránt engedélyezett, a sötét dáma a b7 vagy a8 mezőkre is léphet, mindhárom világos bábu leütésével.

Az ütésre vonatkozó szabályok egyikénél sem szempont, hogy a leütendő bábu egyszerű-e vagy dáma.

Ha egy bábu ütéssel éri el az utolsó sort, a szabályoknak megfelelően dámává válik. Ha ebből a helyzetből – immár dámaként – újabb ütésre nyílik lehetőség, az ütéssorozat azonnal folytatható. Van olyan szabályváltozat is, amely egyszerű bábuknak is megengedi a visszafelé ütést. Ilyenkor a játékosoknak meg kell állapodniuk abban, hogy az utolsó sor érintése során egy egyszerű bábu dámává válik-e.

</value>
  </data>
</root>